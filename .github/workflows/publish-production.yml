name: '[PROD] Build & Publish'
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: 'Build'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Run build command
        run: |
          export NODE_ENV=production
          pnpm run build
      - name: Archive dist
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: dist

  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: 'Publish'
    needs: build
    steps:
      - name: Download build output
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: build-output
      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.ACCOUNT_ID }}
          projectName: raphael-catarino-website
          directory: build-output
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: main
        id: publish
      - name: Outputs
        run: |
          echo "ID: ${{ steps.publish.outputs.id }}"
          echo "URL: ${{ steps.publish.outputs.url }}"
          echo "Environment: ${{ steps.publish.outputs.environment }}"
          echo "Alias: ${{ steps.publish.outputs.alias }}"
