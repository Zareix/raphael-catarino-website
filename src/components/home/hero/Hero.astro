---
import { getLangFromUrl, useTranslations } from '~/i18n';
import heroPP from '~/assets/hero-pp.jpg';
import { Image } from 'astro:assets';
import SocialsIcon from './SocialsIcon.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<section
  id="hero"
  class="flex h-screen flex-col items-center justify-center gap-4 bg-gradient-to-b from-stone-300 to-stone-50 md:flex-row dark:from-slate-950 dark:to-slate-900"
>
  <div class="mx-8">
    <h1>{t('hero.title')}</h1>
    <h2
      class="mx-0 bg-gradient-to-br from-blue-400 to-purple-800 bg-clip-text text-transparent"
    >
      {t('hero.subtitle')}
    </h2>
    <h3 class="text-slate-700 dark:text-gray-300">
      Building with <span
        id="heroTechno"
        class="bg-gradient-to-t from-purple-700 to-purple-950 to-[180%] bg-clip-text pr-2 italic text-transparent dark:from-slate-50 dark:to-slate-500 dark:to-100%"
        >React</span
      >
    </h3>
    <div class="mt-2 hidden md:block">
      <SocialsIcon />
    </div>
  </div>
  <div id="hero-image" class="max-w-[300px] md:w-1/3">
    <Image
      src={heroPP}
      width="800"
      height="800"
      sizes="(max-width: 800px) 80vw, 800px"
      alt="descriptive text"
      loading="eager"
      class="aspect-square rounded-xl object-cover shadow-2xl shadow-blue-500/30 dark:shadow-purple-800/70"
    />
    <div class="mt-2 flex justify-end md:hidden">
      <SocialsIcon />
    </div>
  </div>
</section>

<script>
  import { DOMAINS } from '~/content/skills';

  const domains = Object.values(DOMAINS).flat();

  let currentIndex = 0;
  const changeTechno = () => {
    const technoTitle = document.getElementById('heroTechno');
    if (!technoTitle) return;
    currentIndex = (currentIndex + 1) % domains.length;
    technoTitle.style.animationName = 'none';
    requestAnimationFrame(() => {
      setTimeout(() => {
        technoTitle.style.animation =
          'animate-hero-techno 0.8s var(--ease-out-4)';
        technoTitle.innerText = domains[currentIndex];

        setTimeout(() => {
          changeTechno();
        }, 2000);
      }, 0);
    });
  };
  setTimeout(() => {
    changeTechno();
  }, 2000);
</script>

<style>
  @keyframes animate-hero-title {
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes animate-hero-image {
    85% {
      opacity: 1;
      scale: 1;
    }
    100% {
      opacity: 1;
      scale: 1;
      filter: blur(0);
    }
  }

  @keyframes animate-hero-techno {
    0% {
      opacity: 0;
      scale: 0.85;
      filter: blur(14px);
    }
    85% {
      opacity: 1;
      scale: 1;
    }
    100% {
      filter: blur(0);
    }
  }

  h1 {
    opacity: 0;
    transform: translateY(-80px);
    animation: animate-hero-title 1s forwards var(--ease-out-3);
  }
  h2 {
    opacity: 0;
    transform: translateY(-70px);
    animation: animate-hero-title 1s 0.1s forwards var(--ease-out-3);
  }

  h3 {
    opacity: 0;
    transform: translateY(-60px);
    animation: animate-hero-title 1s 0.2s forwards var(--ease-out-3);
  }

  #hero-image {
    opacity: 0;
    scale: 0.85;
    filter: blur(15px);
    animation: animate-hero-image 0.8s 0.75s forwards var(--ease-out-4);
  }
</style>
