---
import { getLangFromUrl, useTranslations } from '@/i18n/utils';
import { getAllExperiences } from '@/lib/notion';
import { Image } from '@astrojs/image/components';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const experiences = await getAllExperiences(lang);
---

<section id="experiences" class="flex flex-col items-center my-24">
  <h1>
    {t('experiences.title')}
  </h1>
  <h2>
    {t('experiences.subtitle')}
  </h2>
  <div
    class="container flex items-end overflow-x-scroll py-4 px-2 md:snap-none my-10 overflow-y-hidden"
  >
    {
      experiences.map((exp) => (
        <article>
          <div class="content mx-4 flex w-max max-w-[400px] snap-center items-center justify-center gap-3 rounded-md border border-gray-300 bg-stone-50 bg-opacity-60 px-6 py-4 shadow transition-shadow hover:shadow-md dark:border-gray-700  dark:bg-gray-900 dark:text-gray-50">
            <Image
              src={exp.icon}
              alt={exp.entreprise}
              width={48}
              height={48}
              fit="contain"
              background="rgba(255,255,255,0)"
              format={exp.icon.includes('.svg') ? 'svg' : 'png'}
            />
            <div>
              <h3 class="w-min text-lg font-bold">{exp.title}</h3>
              <a href={exp.url} class="hover:underline">
                <h4 class="text-zinc-600 dark:text-zinc-400 text-sm">
                  {exp.entreprise}
                </h4>
              </a>
            </div>
          </div>
          <div class="mt-8 text-center text-zinc-600 dark:text-zinc-300 text-sm">
            {exp.date.start.toLocaleDateString(lang, {
              day: undefined,
              month: exp.dateIncludeMonth ? 'long' : undefined,
              year: 'numeric',
            })}
            {exp.date.end && (
              <>
                {' '}
                -{' '}
                {exp.date.end.toLocaleDateString(lang, {
                  day: undefined,
                  month: exp.dateIncludeMonth ? 'long' : undefined,
                  year: 'numeric',
                })}
              </>
            )}
          </div>
        </article>
      ))
    }
  </div>
</section>

<style lang="scss">
  article {
    position: relative;
    &::before {
      content: '';
      position: absolute;
      inset: 0;
      top: auto;
      bottom: 2rem;
      width: 100%;
      height: 2px;
      background-color: #61616a;
    }
    &::after {
      content: '';
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      bottom: calc(2rem - 8px);
      width: 20px;
      height: 20px;
      border-radius: 999vw;
      background-color: #fff;
      border: 2px solid #61616a;
    }
    .dark &::before {
      background-color: rgb(209 213 219);
    }
    .dark &::after {
      background-color: rgb(17 24 39);
      border: 2px solid rgb(209 213 219);
    }
  }
</style>

<script>
  import { gsap } from 'gsap';

  gsap.from('#experiences article .content', {
    scrollTrigger: {
      trigger: '#experiences article',
      start: 'top 90%',
    },
    y: 100,
    opacity: 0,
    duration: 0.5,
    stagger: 0.2,
  });
</script>
